% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Visualization.R
\name{plot_heatmap}
\alias{plot_heatmap}
\title{Plot Heatmap}
\usage{
plot_heatmap(
  data,
  pvals = NULL,
  log.scale = FALSE,
  bounds = NULL,
  colors = (grDevices::colorRampPalette(rev(c("red", "orange", "yellow", "black", "navy",
    "purple", "magenta"))))(100),
  stars = TRUE,
  stars.col = "white",
  cluster_rows = TRUE,
  cluster_cols = TRUE,
  annotation_row = NA,
  annotation_col = NA
)
}
\arguments{
\item{data}{a matrix of enrichment scores for various pathways across multiple cell-types}

\item{pvals}{a matrix of FDR or other adjusted p-values for each enrichment in data}

\item{log.scale}{whether to log-scale the provided scores (data - See Details).}

\item{bounds}{the boundaries uses for the color scheme of the enrichment scores. By default will use a centered boundary covering the full range of data.}

\item{colors}{a vector of colors, the color scale used for enrichment scores.}

\item{stars}{boolean, whether to plot stars indicating signifcance of the enrichments (see Details).}

\item{stars.col}{the color for the stars}

\item{cluster_rows}{whether to cluster & rearrange the rows of the heatmap}

\item{cluster_cols}{whether to cluster & rearrange the columns of the heatmap}

\item{annotation_row}{a matrix of annotations for the rows of the heatmaps (see:pheatmap)}

\item{annotation_col}{a matrix of annotations for the columns of the heatmaps (see:pheatmap)}
}
\value{
Nothing.
}
\description{
Plots a heatmap of a provided enrichment score matrix.
}
\details{
log.scale : data is log2-scaled as log2(abs(data)+1)*sign(data) this preserves the +ve/-ve sign which is used for the direction of the expression of the pathway in each cell-type.

stars : plots a "*" for enrichments significant at p < 0.05, "**" for p < 0.0005, and "***" for p < 0.000005
}
\examples{
heat_data <- matrix(rnorm(100), ncol=10)
rownames(heat_data) <- paste("pathway", 1:nrow(heat_data), sep="")
colnames(heat_data) <- paste("celltype", 1:ncol(heat_data), sep="")
pvals=matrix(exp(-abs(rnorm(100,mean=5, sd=10))),ncol=10)
plot_heatmap(heat_data, stars=FALSE)
plot_heatmap(heat_data, pvals=pvals, stars=TRUE)
}
