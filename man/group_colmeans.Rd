% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Pseudobulks.R
\name{group_colmeans}
\alias{group_colmeans}
\title{Group Column Means}
\usage{
group_colmeans(MAT, group_labs, type = c("mean", "sum", "var"))
}
\arguments{
\item{MAT}{a matrix or sparse matrix of values to be aggregated}

\item{group_labs}{a vector of group labels equal in length to the number of columsn of MAT.}

\item{type}{whether to calculate the column means, column sums, or column variances}
}
\value{
a matrix of the column means for each group.
}
\description{
Optimized code for calculating the column means or column sums of a matrix after grouping the columns by a vector of groups.
}
\details{
Uses my_colSums, my_colMeans, and my_rowVars to calculate a matrix of column means, column sums, or column variances for each group devinfed in group_labs. Note normalized expression should be averaged while raw counts should be summed.
}
\examples{
example_data <- generate_test_cellcounts()
total_celltype_counts <- group_colmeans(t(example_data$counts),example_data$celltypes, type="sum")
avg_donor_counts <- group_colmeans(t(example_data$counts),example_data$donors, type="mean")
#Test cases
group_colmeans(example_data$counts, c("A", rep("B", nrow(example_data$counts)-1)), type="sum") # group with 1 entry
group_colmeans(example_data$counts, c("A", rep("B", nrow(example_data$counts)-1)), type="mean") # group with 1 entry
group_colmeans(example_data$counts, c("A", rep("B", nrow(example_data$counts)-1)), type="var") # group with 1 entry
group_colmeans(t(example_data$counts)[,1], example_data$donor, type="sum") # data with 1 column
group_colmeans(t(example_data$counts)[,1], example_data$donor, type="mean") # data with 1 column
group_colmeans(t(example_data$counts)[,1], example_data$donor, type="var") # data with 1 column
}
