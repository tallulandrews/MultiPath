% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Enrichments.R
\name{do_gsea}
\alias{do_gsea}
\title{GeneSet Enrichment Analysis}
\usage{
do_gsea(
  scored_genes,
  pathways,
  fdr = 0.05,
  min.term.size = 15,
  max.term.size = 1000,
  seed = 2910,
  nperm = 1e+05
)
}
\arguments{
\item{scored_genes}{a vector of scores named with the gene name.}

\item{pathways}{a list of gene sets or pathways to test for enrichment. The list must be named by the pathway name and contain vectors of gene names for the genes in that gene set.}

\item{fdr}{the FDR threshold used to filter output.}

\item{min.term.size}{pathways must have at least this number of genes to be tested.}

\item{max.term.size}{pathways must have fewer than this number of genes to be tested.}

\item{seed}{random seed that will be set at the start of this function, this ensure complete reproducibility.}

\item{nperm}{the number of permutations used to estimate p-values, it is recommended to use at least 30,000 to ensure reproducible results.}
}
\value{
A list containing two items:
results = a dataframe containing the pathway name, number of query genes in the pathway (intersection), log2foldenrichment, FDR
contrib = a list of genes found in the intersection between this pathway and the query gene set.
}
\description{
Performs gene set enrichment analysis using fgsea
}
\details{
Uses Rcpp backend to optimize overrepresentation analysis (ORA). 
A given set of query genes is tested for enrichment in genes from provided named pathways or genesets, compared to a specified set of background genes. 
Typically a query gene set will be a group of up or down regulated genes obtained from differential expression testing. The background would be all the genes in the count matrix used in the differential expression test. 
ORA is performed with a hypergeometric test against a specified background and applies a FDR multiple testing correction, after filtering provided pathways for terms with a reasonable number of genes attributed to it.
}
\examples{
paths <- convert_GSEAObj_to_list(get_pathways("test"))
rich <- do_ora(paths[[1]], paths, background=unique(unlist(paths)))
dim(rich$results)[1] == length(rich$contrib) # TRUE
}
